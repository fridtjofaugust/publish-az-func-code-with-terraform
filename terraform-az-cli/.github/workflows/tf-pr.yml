name: Terraform PR w/comments

on:
  pull_request:
    branches:
    - main
  workflow_dispatch:

# on:
#   workflow_dispatch:

permissions:
  contents: read
  pull-requests: write

env:
  TF_LOG: INFO
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"


jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
      
    steps:
    # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v2

    # Install the preferred version of Terraform CLI 
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.8

      - name: Terraform Init
        id: init
        working-directory: cfg/
        env:
          ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
          ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
          ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
        run: terraform init


      - name: Terraform Format
        id: fmt
        run: terraform fmt -check -recursive
        working-directory: cfg/
        continue-on-error: true


      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        continue-on-error: true


      - name: Terraform Plan
        id: plan
        working-directory: cfg/
        env:
          ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
          ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
          ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
          ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color -out=./tfplan


      - name: add-plan-comment
        id: comment
        uses: actions/github-script@v3
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.TOKEN_GITHUB }}
          script: |
                  const output = 
                  `#### Terraform Format and Style üé®\`${{ steps.fmt.outcome }}\`
                  #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
                  #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
                  #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
      
                   <details><summary>Show Plan</summary>
          
                   \`\`\`${process.env.PLAN}\`\`\`
          
                   </details>
          
                  *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
                  github.issues.createComment({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: output
                  })
       
      # - name: Terraform Apply
      #   if: github.ref == 'refs/heads/test' && github.event_name == 'push'
      #   env:
      #     ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
      #     ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
      #     ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
      #     ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
      #   run: terraform apply -no-color -auto-approve -input=false ./tfplan