name: CI/CD deploy to aks

on:
  # push:
  #   branches: [ main ]
  # pull_request:
  #   branches:  none # [ main ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  LOCATION: westeurope
  IMAGE_NAME: webapp
  IMAGE_TAG: ${{ github.run_number }}
  
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"

  AKS_RESOURCE_GROUP: lab-k8s-rg
  AKS_NAME: lab-k8s-cluster
  ACR_NAME: acrforaks102
  SQL_INSTANCE_NAME: sqlforaks102
  DB_ADMIN_LOGIN: houssem
  DB_ADMIN_PASSWORD: "@Aa123456"
  STORAGE_NAME: storageforaks102
    
jobs:
  deploy-app-aks:
    name: Deploy app into Kubernetes
    runs-on: ubuntu-latest
    # needs: [build-push-container, create-terraform-infra]
    steps:
    - uses: actions/checkout@v2
    - name: Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Connect to AKS
      uses: Azure/aks-set-context@v1
      with:
        creds: '${{ secrets.AZURE_CREDENTIALS }}'
        cluster-name: ${{ env.AKS_NAME }}
        resource-group: ${{ env.AKS_RESOURCE_GROUP }}

    - name: Deploy YAML manifest into AKS
      uses: Azure/k8s-deploy@v1
      with:
        manifests: |
          deployments/kuard/kuard.yml